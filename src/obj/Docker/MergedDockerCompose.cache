services:
  accounts.grpc:
    build:
      context: D:\Workspace\Projects\Microservices\Activities_Microservice_v3\src
      dockerfile: Services/Activities/Accounts.Grpc/Dockerfile
    container_name: accounts.grpc
    depends_on:
      activitiesdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:DefaultConnection: User ID=postgres;Password=password;Server=activitiesdb;Port=5432;
    image: accountsgrpc
    ports:
    - published: 8003
      target: 80
  activities.api:
    build:
      context: D:\Workspace\Projects\Microservices\Activities_Microservice_v3\src
      dockerfile: Services/Activities/Activities.API/Dockerfile
    container_name: activities.api
    depends_on:
      activitiesdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:DefaultConnection: Server=activitiesdb;Port=5432;Database=ActivitiesDb;User
        Id=postgres;Password=password;
    image: activitiesapi
    ports:
    - published: 8000
      target: 80
  activitiesdb:
    container_name: activitiesdb
    environment:
      POSTGRES_DB: ActivitiesDb
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    image: postgres
    ports:
    - published: 5432
      target: 5432
    restart: always
    volumes:
    - postgres_data:/var/lib/postgresql/data/:rw
  booking.api:
    build:
      context: D:\Workspace\Projects\Microservices\Activities_Microservice_v3\src
      dockerfile: Services/Bookings/Booking.API/Dockerfile
    container_name: booking.api
    depends_on:
      bookingdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://bookingdb:27017
      GrpcSettings:ActivitiesUri: accounts.grpc
    image: bookingapi
    ports:
    - published: 8001
      target: 80
  bookingdb:
    container_name: bookingdb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - mongo_data:/data/db:rw
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@mail.com
      PGADMIN_DEFAULT_PASSWORD: password
    image: dpage/pgadmin4
    ports:
    - published: 5050
      target: 80
    restart: always
    volumes:
    - pgadmin_data:/root/.pgadmin:rw
version: '3.4'
volumes:
  mongo_data: {}
  pgadmin_data: {}
  postgres_data: {}